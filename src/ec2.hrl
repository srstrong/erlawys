%% HRL file generated by ERLSOM
%%
%% It is possible to change the name of the record fields.
%%
%% It is possible to add default values, but be aware that these will
%% only be used when *writing* an xml document.

-record('ec2:ConfirmProductInstanceResponseType', {anyAttribs, 'return', 'ownerId'}).
-record('ec2:ProductCodesSetItemType', {anyAttribs, 'productCode'}).
-record('ec2:ProductCodesSetType', {anyAttribs, 'item'}).
-record('ec2:ConfirmProductInstanceType', {anyAttribs, 'productCode', 'instanceId'}).
-record('ec2:DescribeImageAttributeResponseType', {anyAttribs, 'imageId', choice}).
-record('ec2:DescribeImageAttributesGroup-launchPermission', {anyAttribs}).
-record('ec2:DescribeImageAttributesGroup-productCodes', {anyAttribs}).
-record('ec2:DescribeImageAttributesGroup', {anyAttribs, choice}).
-record('ec2:DescribeImageAttributeType', {anyAttribs, 'imageId', choice}).
-record('ec2:ResetImageAttributeResponseType', {anyAttribs, 'return'}).
-record('ec2:EmptyElementType', {anyAttribs}).
-record('ec2:ResetImageAttributesGroup', {anyAttribs, 'launchPermission'}).
-record('ec2:ResetImageAttributeType', {anyAttribs, 'imageId', 'ResetImageAttributesGroup'}).
-record('ec2:ModifyImageAttributeResponseType', {anyAttribs, 'return'}).
-record('ec2:ProductCodeItemType', {anyAttribs, 'productCode'}).
-record('ec2:ProductCodeListType', {anyAttribs, 'item'}).
-record('ec2:LaunchPermissionItemType-userId', {anyAttribs, 'userId'}).
-record('ec2:LaunchPermissionItemType-group', {anyAttribs, 'group'}).
-record('ec2:LaunchPermissionItemType', {anyAttribs, choice}).
-record('ec2:LaunchPermissionListType', {anyAttribs, 'item'}).
-record('ec2:LaunchPermissionOperationType-add', {anyAttribs, 'item'}).
-record('ec2:LaunchPermissionOperationType-remove', {anyAttribs, 'item'}).
-record('ec2:LaunchPermissionOperationType', {anyAttribs, choice}).
-record('ec2:ModifyImageAttributeType', {anyAttribs, 'imageId', choice}).
-record('ec2:InstanceStateType', {anyAttribs, 'code', 'name'}).
-record('ec2:RevokeSecurityGroupIngressResponseType', {anyAttribs, 'return'}).
-record('ec2:RevokeSecurityGroupIngressType', {anyAttribs, 'userId', 'groupName', 'ipPermissions'}).
-record('ec2:AuthorizeSecurityGroupIngressResponseType', {anyAttribs, 'return'}).
-record('ec2:AuthorizeSecurityGroupIngressType', {anyAttribs, 'userId', 'groupName', 'ipPermissions'}).
-record('ec2:SecurityGroupItemType', {anyAttribs, 'ownerId', 'groupName', 'groupDescription', 'ipPermissions'}).
-record('ec2:SecurityGroupSetType', {anyAttribs, 'item'}).
-record('ec2:UserIdGroupPairType', {anyAttribs, 'userId', 'groupName'}).
-record('ec2:UserIdGroupPairSetType', {anyAttribs, 'item'}).
-record('ec2:IpRangeItemType', {anyAttribs, 'cidrIp'}).
-record('ec2:IpRangeSetType', {anyAttribs, 'item'}).
-record('ec2:IpPermissionType', {anyAttribs, 'ipProtocol', 'fromPort', 'toPort', 'groups', 'ipRanges'}).
-record('ec2:IpPermissionSetType', {anyAttribs, 'item'}).
-record('ec2:DescribeSecurityGroupsResponseType', {anyAttribs, 'securityGroupInfo'}).
-record('ec2:DescribeSecurityGroupsSetItemType', {anyAttribs, 'groupName'}).
-record('ec2:DescribeSecurityGroupsSetType', {anyAttribs, 'item'}).
-record('ec2:DescribeSecurityGroupsType', {anyAttribs, 'securityGroupSet'}).
-record('ec2:DeleteSecurityGroupResponseType', {anyAttribs, 'return'}).
-record('ec2:DeleteSecurityGroupType', {anyAttribs, 'groupName'}).
-record('ec2:CreateSecurityGroupResponseType', {anyAttribs, 'return'}).
-record('ec2:CreateSecurityGroupType', {anyAttribs, 'groupName', 'groupDescription'}).
-record('ec2:DescribeImagesResponseItemType', {anyAttribs, 'imageId', 'imageLocation', 'imageState', 'imageOwnerId', 'isPublic', 'productCodes'}).
-record('ec2:DescribeImagesResponseInfoType', {anyAttribs, 'item'}).
-record('ec2:DescribeImagesResponseType', {anyAttribs, 'imagesSet'}).
-record('ec2:DescribeImagesExecutableByType', {anyAttribs, 'user'}).
-record('ec2:DescribeImagesExecutableBySetType', {anyAttribs, 'item'}).
-record('ec2:DescribeImagesOwnerType', {anyAttribs, 'owner'}).
-record('ec2:DescribeImagesOwnersType', {anyAttribs, 'item'}).
-record('ec2:DescribeImagesItemType', {anyAttribs, 'imageId'}).
-record('ec2:DescribeImagesInfoType', {anyAttribs, 'item'}).
-record('ec2:DescribeImagesType', {anyAttribs, 'executableBySet', 'imagesSet', 'ownersSet'}).
-record('ec2:ReservationSetType', {anyAttribs, 'item'}).
-record('ec2:DescribeInstancesResponseType', {anyAttribs, 'reservationSet'}).
-record('ec2:DescribeInstancesItemType', {anyAttribs, 'instanceId'}).
-record('ec2:DescribeInstancesInfoType', {anyAttribs, 'item'}).
-record('ec2:DescribeInstancesType', {anyAttribs, 'instancesSet'}).
-record('ec2:RebootInstancesResponseType', {anyAttribs, 'return'}).
-record('ec2:RebootInstancesItemType', {anyAttribs, 'instanceId'}).
-record('ec2:RebootInstancesInfoType', {anyAttribs, 'item'}).
-record('ec2:RebootInstancesType', {anyAttribs, 'instancesSet'}).
-record('ec2:TerminateInstancesResponseItemType', {anyAttribs, 'instanceId', 'shutdownState', 'previousState'}).
-record('ec2:TerminateInstancesResponseInfoType', {anyAttribs, 'item'}).
-record('ec2:TerminateInstancesResponseType', {anyAttribs, 'instancesSet'}).
-record('ec2:TerminateInstancesItemType', {anyAttribs, 'instanceId'}).
-record('ec2:TerminateInstancesInfoType', {anyAttribs, 'item'}).
-record('ec2:TerminateInstancesType', {anyAttribs, 'instancesSet'}).
-record('ec2:GetConsoleOutputResponseType', {anyAttribs, 'instanceId', 'timestamp', 'output'}).
-record('ec2:GetConsoleOutputType', {anyAttribs, 'instanceId'}).
-record('ec2:RunningInstancesItemType', {anyAttribs, 'instanceId', 'imageId', 'instanceState', 'privateDnsName', 'dnsName', 'reason', 'keyName', 'amiLaunchIndex', 'productCodes'}).
-record('ec2:RunningInstancesSetType', {anyAttribs, 'item'}).
-record('ec2:ReservationInfoType', {anyAttribs, 'reservationId', 'ownerId', 'groupSet', 'instancesSet'}).
-record('ec2:UserDataType-data', {anyAttribs, 'data'}).
-record('ec2:UserDataType', {anyAttribs, 'version', 'encoding', choice}).
-record('ec2:GroupItemType', {anyAttribs, 'groupId'}).
-record('ec2:GroupSetType', {anyAttribs, 'item'}).
-record('ec2:RunInstanceItemType', {anyAttribs, 'imageId', 'minCount', 'maxCount', 'keyName'}).
-record('ec2:RunInstancesInfoType', {anyAttribs, 'item'}).
-record('ec2:RunInstancesType', {anyAttribs, 'instancesSet', 'groupSet', 'additionalInfo', 'userData', 'addressingType'}).
-record('ec2:DescribeKeyPairsResponseItemType', {anyAttribs, 'keyName', 'keyFingerprint'}).
-record('ec2:DescribeKeyPairsResponseInfoType', {anyAttribs, 'item'}).
-record('ec2:DescribeKeyPairsResponseType', {anyAttribs, 'keySet'}).
-record('ec2:DescribeKeyPairsItemType', {anyAttribs, 'keyName'}).
-record('ec2:DescribeKeyPairsInfoType', {anyAttribs, 'item'}).
-record('ec2:DescribeKeyPairsType', {anyAttribs, 'keySet'}).
-record('ec2:DeleteKeyPairResponseType', {anyAttribs, 'return'}).
-record('ec2:DeleteKeyPairType', {anyAttribs, 'keyName'}).
-record('ec2:CreateKeyPairResponseType', {anyAttribs, 'keyName', 'keyFingerprint', 'keyMaterial'}).
-record('ec2:CreateKeyPairType', {anyAttribs, 'keyName'}).
-record('ec2:DeregisterImageResponseType', {anyAttribs, 'return'}).
-record('ec2:DeregisterImageType', {anyAttribs, 'imageId'}).
-record('ec2:RegisterImageResponseType', {anyAttribs, 'imageId'}).
-record('ec2:RegisterImageType', {anyAttribs, 'imageLocation'}).
